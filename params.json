{
  "name": "Vimfiles",
  "tagline": "The Vim Configuration. Uses vim-plug to manage plugins.",
  "body": "# The Vim Configuration. [![Build Status](https://travis-ci.org/luan/vimfiles.svg?branch=master)](https://travis-ci.org/luan/vimfiles)\r\n\r\nIf you're trying to use this config checkout this [cheat\r\nsheet](https://github.com/luan/vimfiles/wiki/Luan's-Vim-Cheat-Sheet).\r\n\r\n---\r\n\r\nThis vimfiles support both standard [vim](http://www.vim.org/) and\r\n[neovim](https://neovim.io/), I'd encourage you to give neovim a try.\r\n\r\nIf you're using neovim follow [this\r\nguide](https://github.com/neovim/neovim/wiki/Installing-Neovim) in order to get\r\nit properly setup. The autocompletion plugin we use needs [python3\r\nsupport](https://neovim.io/doc/user/nvim_python.html) too.\r\n\r\nIf you're using regular vim make sure to install it with lua support, on ubuntu\r\nthat's provided with the `vim-nox` package and on OSX it can be installed with\r\nHomebrew by doing `brew install vim --with-lua`.\r\n\r\n### Table of Contents\r\n\r\n1. [Using This Configuration](#using-this-configuration)\r\n1. [Installation](#installation)\r\n  1. [Additional Dependencies](#additional-dependencies)\r\n    1. [ctags](#ctags)\r\n1. [Updating](#updating)\r\n1. [Customizing](#customizing)\r\n  1. [Changing Configuration](#changing-configuration)\r\n  1. [Adding Plugins](#adding-plugins)\r\n1. [Functionality](#functionality)\r\n  1. [Defaults Overridden](#defaults-overridden)\r\n1. [Screenshots](#screenshots)\r\n\r\n## Using This Configuration\r\n\r\nThis configuration is supposed to be used directly, **not** forked. If you intend\r\nto keep up to date with changes made to this repo it's recommended that you\r\njust clone this repository and customize the config using the [provided\r\nhooks](#customizing). If you have a feature or fix to submit, feel free to fork\r\nand send a PR.\r\n\r\n---\r\n\r\n## Installation\r\n\r\nAs simple as:\r\n```bash\r\ncurl vimfiles.luan.sh/install | bash\r\n\r\n# To override you current config:\r\n# curl vimfiles.luan.sh/install | FORCE=1 bash\r\n```\r\n\r\n### Additional Dependencies\r\n\r\nMost of the dependencies are installed automatically, assuming you have a\r\nminimal development environment for you language. For example we download all\r\nthe tools for golang and elm automatically.  `git` is assumed to be installed\r\nand so is `ag` or `ack`, if either of those is not, some plugins may not behave\r\nas expected.\r\n\r\n#### ctags\r\n\r\n`ctags` is used to jump to function definitions, it is not strictly necessary if\r\nyou don't need that functionality, if you want to be able to jump effectively\r\nto definitions install the correct version of ctags.\r\n\r\n**OSX**\r\n\r\n```bash\r\nbrew uninstall ctags\r\nbrew tap universal-ctags/universal-ctags\r\nbrew install universal-ctags --HEAD\r\n```\r\n\r\n**Linux**\r\n\r\n*exuberant-ctags* from your OS is generally enough for most things, but if you\r\nwant more CSS, ruby and other goodnesses you will need to manually compile and\r\nreplace your ctags installation with: https://github.com/fishman/ctags\r\n\r\n\r\n---\r\n\r\n## Updating\r\n\r\nYou should frequently update you copy of this config, to get latest fixes and\r\nimprovements. To do so you can run:\r\n```bash\r\nvim-update\r\n```\r\n\r\nAssuming `/usr/local/bin` is on your `PATH` on OSX or `~/bin/` on Linux.\r\n\r\nIf that doesn't work you can always run the script directly:\r\n```bash\r\n~/.vim/update\r\n```\r\n\r\n---\r\n\r\n## Customizing\r\n\r\nWe load 3 extra configuration files that are **NOT** part of this repo:\r\n\r\n* `~/.vimrc.local.before` (*to open: `,vb`*): Configuration to be set before everything else, this\r\n  runs before any plugin or any config from this repository.\r\n* `~/.vimrc.local` (*to open: `,vl`*): Configuration to be set after everything else, this runs\r\n  after all other configuration is loaded and all plugins are setup.\r\n* `~/.vimrc.local.plugins` (*to open: `,vp`*): Extra plugins to be loaded (along with maybe\r\n  optional configuration for them). Is loaded after all the default plugins are\r\n  installed.\r\n\r\nA common pattern is for individuals or teams to have those 3 files checked in\r\nto a separate [dotfiles](https://github.com/luan/dotfiles) repository and have\r\nthem be symlinked into your `$HOME` directory. Symlink them before you run the\r\ninstall script and everything should work.\r\n\r\n### Changing Configuration\r\n\r\nYou might want to change some config such as disabling autocompletion or\r\nenabling auto save, or maybe just changing your colorscheme.  You can do so by\r\nediting the `~/.vimrc.local` file, for example:\r\n\r\nChanging colorscheme:\r\n```vim\r\ncolorscheme gruvbox\r\n```\r\n\r\nEnabling auto save:\r\n```vim\r\n\" will save automatically when leaving the buffer\r\n\" 0 or 1, defaults 0\r\nlet g:autosave = 1\r\n```\r\n\r\nDisabling neocomplete:\r\n```vim\r\nlet g:neocomplete#enable_at_startup = 0   \" disable neocomplete\r\nlet g:neocomplcache_enable_at_startup = 0 \" disable the fallback version when no LUA\r\n```\r\n\r\nSome configuration values need to be set before loading plugins, for that we\r\nhave the `~/.vimrc.local.before`, that get's loaded before everything else, one\r\nexample usage of it is enabling fancy characters for the airline plugin:\r\n```vim\r\nlet g:airline_powerline_fonts = 1\r\n```\r\n\r\n### Adding Plugins\r\n\r\nIf you have a favorite plugin you want to install but couldn't convince me to\r\nadd it as a default you can still have it be installed by just putting it in\r\nthe `~/.vimrc.local.plugins`, like such:\r\n```vim\r\n\" Plugin to navigate between camelCase words\r\nPlug 'bkad/CamelCaseMotion'\r\n```\r\n\r\n---\r\n\r\n## Functionality\r\n\r\nThis config packs a considerable amount of plugins, there are descriptions for\r\nmost of them [here](Plug.vim) in the comments. It also strives to not override\r\ndefault behavior, although that's not always possible.\r\n\r\nThere's [space to write some\r\nguides](https://github.com/luan/vimfiles/issues/56) as to how to effectively\r\nuse this config for certain languages. The main targets are golang and ruby,\r\nalthough this configuration should be usable with most languages.\r\n\r\n### Defaults Overridden\r\n\r\nThese bindings are known to be overridden in this config. Please open an\r\n[issue](https://github.com/luan/vimfiles/issues/new) if you find any other.\r\n* `|`: Default behavior is jump to column. We have it set to `:NERDTreeFocus`.\r\n* `,`: Default is reverse repeat a `f`, `t`, `F`, or `T` search. We have it set to `<leader>`.\r\n* `\\`: Is the default `<leader>`. We have it set to `:NERDTreeToggle`.\r\n* `<enter>` or `<cr>`: Default behavior is to move the cursor one line down. We\r\n  have it set to save if modified (basically `:w` when the file has a change).\r\n\r\nA lot of small defaults are overridden everywhere else, and those are just to\r\nmake editing a better experience and should in no way make this vim not feel\r\nlike vim. For a glance in some of the changes look at\r\n[config/basic.vim](config/basic.vim).\r\n\r\nA few overridden are worth mentioning:\r\n\r\n```vim\r\nset splitright\r\n```\r\nThese change where new splits are open, when you for example do `:vs` the\r\ndefault behavior is to open a split on the left, it feels more natural to open\r\none on the right instead.\r\n\r\n```vim\r\nset iskeyword+=$,@,-\r\n```\r\nAdd extra characters that are valid parts of variables.\r\n\r\n---\r\n\r\n## Screenshots\r\n\r\n**Default colorscheme: hybrid**\r\n\r\n[![hybrid](https://github.com/luan/vimfiles/raw/master/screenshots/hybrid.png)](https://github.com/luan/vimfiles/raw/master/screenshots/hybrid.png)\r\n\r\n**Alternate colorscheme: monokai**\r\n\r\n[![monokai](https://github.com/luan/vimfiles/raw/master/screenshots/monokai.png)](https://github.com/luan/vimfiles/raw/master/screenshots/monokai.png)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}